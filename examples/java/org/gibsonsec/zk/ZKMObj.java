// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ZKM.proto

package org.gibsonsec.zk;

public final class ZKMObj {
  private ZKMObj() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ZKMOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string key = 1;
    boolean hasKey();
    String getKey();
    
    // optional string hwid = 2;
    boolean hasHwid();
    String getHwid();
    
    // optional int32 type = 3;
    boolean hasType();
    int getType();
    
    // repeated string options = 4;
    java.util.List<String> getOptionsList();
    int getOptionsCount();
    String getOptions(int index);
  }
  public static final class ZKM extends
      com.google.protobuf.GeneratedMessage
      implements ZKMOrBuilder {
    // Use ZKM.newBuilder() to construct.
    private ZKM(Builder builder) {
      super(builder);
    }
    private ZKM(boolean noInit) {}
    
    private static final ZKM defaultInstance;
    public static ZKM getDefaultInstance() {
      return defaultInstance;
    }
    
    public ZKM getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.gibsonsec.zk.ZKMObj.internal_static_zk_ZKM_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.gibsonsec.zk.ZKMObj.internal_static_zk_ZKM_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string key = 1;
    public static final int KEY_FIELD_NUMBER = 1;
    private java.lang.Object key_;
    public boolean hasKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          key_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string hwid = 2;
    public static final int HWID_FIELD_NUMBER = 2;
    private java.lang.Object hwid_;
    public boolean hasHwid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getHwid() {
      java.lang.Object ref = hwid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          hwid_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getHwidBytes() {
      java.lang.Object ref = hwid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        hwid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 type = 3;
    public static final int TYPE_FIELD_NUMBER = 3;
    private int type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getType() {
      return type_;
    }
    
    // repeated string options = 4;
    public static final int OPTIONS_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList options_;
    public java.util.List<String>
        getOptionsList() {
      return options_;
    }
    public int getOptionsCount() {
      return options_.size();
    }
    public String getOptions(int index) {
      return options_.get(index);
    }
    
    private void initFields() {
      key_ = "";
      hwid_ = "";
      type_ = 0;
      options_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getHwidBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, type_);
      }
      for (int i = 0; i < options_.size(); i++) {
        output.writeBytes(4, options_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getHwidBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, type_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < options_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(options_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getOptionsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.gibsonsec.zk.ZKMObj.ZKM parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.gibsonsec.zk.ZKMObj.ZKM parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.gibsonsec.zk.ZKMObj.ZKM parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.gibsonsec.zk.ZKMObj.ZKM parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.gibsonsec.zk.ZKMObj.ZKM parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.gibsonsec.zk.ZKMObj.ZKM parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.gibsonsec.zk.ZKMObj.ZKM parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.gibsonsec.zk.ZKMObj.ZKM parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.gibsonsec.zk.ZKMObj.ZKM parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.gibsonsec.zk.ZKMObj.ZKM parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.gibsonsec.zk.ZKMObj.ZKM prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.gibsonsec.zk.ZKMObj.ZKMOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.gibsonsec.zk.ZKMObj.internal_static_zk_ZKM_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.gibsonsec.zk.ZKMObj.internal_static_zk_ZKM_fieldAccessorTable;
      }
      
      // Construct using org.gibsonsec.zk.ZKMObj.ZKM.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        key_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        hwid_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        options_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.gibsonsec.zk.ZKMObj.ZKM.getDescriptor();
      }
      
      public org.gibsonsec.zk.ZKMObj.ZKM getDefaultInstanceForType() {
        return org.gibsonsec.zk.ZKMObj.ZKM.getDefaultInstance();
      }
      
      public org.gibsonsec.zk.ZKMObj.ZKM build() {
        org.gibsonsec.zk.ZKMObj.ZKM result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.gibsonsec.zk.ZKMObj.ZKM buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.gibsonsec.zk.ZKMObj.ZKM result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.gibsonsec.zk.ZKMObj.ZKM buildPartial() {
        org.gibsonsec.zk.ZKMObj.ZKM result = new org.gibsonsec.zk.ZKMObj.ZKM(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.hwid_ = hwid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          options_ = new com.google.protobuf.UnmodifiableLazyStringList(
              options_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.options_ = options_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.gibsonsec.zk.ZKMObj.ZKM) {
          return mergeFrom((org.gibsonsec.zk.ZKMObj.ZKM)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.gibsonsec.zk.ZKMObj.ZKM other) {
        if (other == org.gibsonsec.zk.ZKMObj.ZKM.getDefaultInstance()) return this;
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        if (other.hasHwid()) {
          setHwid(other.getHwid());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (!other.options_.isEmpty()) {
          if (options_.isEmpty()) {
            options_ = other.options_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureOptionsIsMutable();
            options_.addAll(other.options_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              key_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              hwid_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              type_ = input.readInt32();
              break;
            }
            case 34: {
              ensureOptionsIsMutable();
              options_.add(input.readBytes());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string key = 1;
      private java.lang.Object key_ = "";
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setKey(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      void setKey(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
      }
      
      // optional string hwid = 2;
      private java.lang.Object hwid_ = "";
      public boolean hasHwid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getHwid() {
        java.lang.Object ref = hwid_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          hwid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setHwid(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        hwid_ = value;
        onChanged();
        return this;
      }
      public Builder clearHwid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        hwid_ = getDefaultInstance().getHwid();
        onChanged();
        return this;
      }
      void setHwid(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        hwid_ = value;
        onChanged();
      }
      
      // optional int32 type = 3;
      private int type_ ;
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getType() {
        return type_;
      }
      public Builder setType(int value) {
        bitField0_ |= 0x00000004;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = 0;
        onChanged();
        return this;
      }
      
      // repeated string options = 4;
      private com.google.protobuf.LazyStringList options_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureOptionsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          options_ = new com.google.protobuf.LazyStringArrayList(options_);
          bitField0_ |= 0x00000008;
         }
      }
      public java.util.List<String>
          getOptionsList() {
        return java.util.Collections.unmodifiableList(options_);
      }
      public int getOptionsCount() {
        return options_.size();
      }
      public String getOptions(int index) {
        return options_.get(index);
      }
      public Builder setOptions(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureOptionsIsMutable();
        options_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addOptions(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureOptionsIsMutable();
        options_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllOptions(
          java.lang.Iterable<String> values) {
        ensureOptionsIsMutable();
        super.addAll(values, options_);
        onChanged();
        return this;
      }
      public Builder clearOptions() {
        options_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      void addOptions(com.google.protobuf.ByteString value) {
        ensureOptionsIsMutable();
        options_.add(value);
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:zk.ZKM)
    }
    
    static {
      defaultInstance = new ZKM(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:zk.ZKM)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_zk_ZKM_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_zk_ZKM_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\tZKM.proto\022\002zk\"?\n\003ZKM\022\013\n\003key\030\001 \001(\t\022\014\n\004h" +
      "wid\030\002 \001(\t\022\014\n\004type\030\003 \001(\005\022\017\n\007options\030\004 \003(\t" +
      "B\032\n\020org.gibsonsec.zkB\006ZKMObj"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_zk_ZKM_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_zk_ZKM_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_zk_ZKM_descriptor,
              new java.lang.String[] { "Key", "Hwid", "Type", "Options", },
              org.gibsonsec.zk.ZKMObj.ZKM.class,
              org.gibsonsec.zk.ZKMObj.ZKM.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
